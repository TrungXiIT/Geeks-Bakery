@{
    Layout = null;
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Geek's Bakery</title>
    <link rel="stylesheet" href="~/css/base.css" />
    <link rel="stylesheet" href="~/css/reset.css" />
    <link rel="stylesheet" href="~/css/login.css" />

    <link rel="icon" href="~/icons/favio.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&family=Poppins:wght@400;500;600;700&display=swap"
          rel="stylesheet" />
</head>

<body>
    <div class="box">
        <div class="switch-button">
            <div id="switchButton" class="switch-button__switch"></div>
            <button id="switchToLogin" class="switch-button__button switch-button__button--active">
                Login
            </button>
            <button id="switchToRegister" class="switch-button__button">
                Register
            </button>
        </div>
        @if (ViewBag.IsRegisterSuccess == true)
        {
            <p style="  margin-top: 30px; text-align: center; color: #009200;">Register successful! Please log in.</p>
        }
        <div id="formInputGroup" class="form-group">
            @await Component.InvokeAsync("Login", ViewData["LoginRequest"])
            @await Component.InvokeAsync("Register", ViewData["RegisterRequest"])
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <partial name="_ValidationScriptsPartial">

        <script src="~/js/login.js"></script>
</body>
</html>